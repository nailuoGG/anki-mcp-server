{
    "name": "anki-mcp-server",
    "version": "0.1.8",
    "mcpName": "io.github.nailuoGG/anki-mcp-server",
    "description": "A Model Context Protocol (MCP) server that enables LLMs to interact with Anki flashcard software through AnkiConnect",
    "type": "module",
    "bin": {
        "anki-mcp-server": "dist/index.js"
    },
    "files": ["dist"],
    "scripts": {
        "prepare": "husky",
        "prebuild": "node -p \"'export const MCP_VERSION = ' + JSON.stringify(require('./package.json').version) + ';'\" > src/_version.ts",
        "dev": "tsup --watch",
        "build": "node scripts/build.js",
        "build:prod": "node scripts/build.js --prod",
        "build:no-mcpb": "node scripts/build.js --no-mcpb",
        "test": "jest --runInBand --detectOpenHandles",
        "release": "node scripts/build.js --prod",
        "format": "biome format . --write",
        "lint": "biome lint src/",
        "check": "biome check --apply .",
        "validate:mcp": "curl -o server.schema.json https://static.modelcontextprotocol.io/schemas/2025-09-29/server.schema.json && node -e \"const Ajv = require('ajv'); const fs = require('fs'); const ajv = new Ajv({allErrors: true, verbose: true}); const schema = JSON.parse(fs.readFileSync('server.schema.json', 'utf8')); const data = JSON.parse(fs.readFileSync('server.json', 'utf8')); const validate = ajv.compile(schema); const valid = validate(data); if (!valid) { console.log('Validation errors:', validate.errors); process.exit(1); } else { console.log('âœ… server.json is valid!'); }\" && rm server.schema.json",
        "inspect": "npx @modelcontextprotocol/inspector dist/index.js"
    },
    "lint-staged": {
        "src/**/*.{js,jsx,ts,tsx}": ["biome format --write", "git add"],
        "src/**/*.test.ts": ["biome format --write", "git add"]
    },
    "dependencies": {
        "@modelcontextprotocol/sdk": "1.18.2",
        "axios": "1.12.1",
        "yanki-connect": "3.0.5"
    },
    "devDependencies": {
        "@anthropic-ai/mcpb": "1.1.1",
        "@biomejs/biome": "1.5.3",
        "@jest/globals": "29.7.0",
        "@types/jest": "29.5.14",
        "@types/node": "20.17.25",
        "axios-mock-adapter": "1.22.0",
        "husky": "^9.1.7",
        "jest": "29.7.0",
        "lint-staged": "^15.5.0",
        "ts-jest": "29.2.6",
        "ts-node": "^10.9.2",
        "tsup": "8.4.0",
        "typescript": "5.8.2"
    },
    "main": "dist/index.js",
    "exports": {
        ".": {
            "import": "./dist/index.js",
            "types": "./dist/index.d.ts"
        }
    },
    "keywords": [
        "anki",
        "mcp",
        "llm",
        "flashcards",
        "ankiconnect",
        "model-context-protocol"
    ],
    "author": "nailuoGG",
    "license": "MIT",
    "repository": {
        "type": "git",
        "url": "git+https://github.com/nailuoGG/anki-mcp-server.git"
    },
    "bugs": {
        "url": "https://github.com/nailuoGG/anki-mcp-server/issues"
    },
    "homepage": "https://github.com/nailuoGG/anki-mcp-server#readme",
    "engines": {
        "node": ">=18.0.0"
    },
    "publishConfig": {
        "access": "public"
    }
}
